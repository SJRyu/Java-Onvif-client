
package org.onvif.ver10.events.wsdl;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EventPortType", targetNamespace = "http://www.onvif.org/ver10/events/wsdl")
@XmlSeeAlso({
    org.onvif.ver10.events.wsdl.ObjectFactory.class,
    org.oasis_open.docs.wsn.b_2.ObjectFactory.class,
    org.oasis_open.docs.wsrf.bf_2.ObjectFactory.class,
    org.oasis_open.docs.wsn.t_1.ObjectFactory.class,
    org.oasis_open.docs.wsrf.r_2.ObjectFactory.class,
    org.w3._2005._08.addressing.ObjectFactory.class
})
public interface EventPortType {


    /**
     * Returns the capabilities of the event service. The result is returned in a typed answer.
     * 
     * @return
     *     returns javax.xml.ws.Response<org.onvif.ver10.events.wsdl.GetServiceCapabilitiesResponse>
     */
    @WebMethod(operationName = "GetServiceCapabilities", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest")
    @RequestWrapper(localName = "GetServiceCapabilities", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", className = "org.onvif.ver10.events.wsdl.GetServiceCapabilities")
    @ResponseWrapper(localName = "GetServiceCapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", className = "org.onvif.ver10.events.wsdl.GetServiceCapabilitiesResponse")
    public Response<GetServiceCapabilitiesResponse> getServiceCapabilitiesAsync();

    /**
     * Returns the capabilities of the event service. The result is returned in a typed answer.
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetServiceCapabilities", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest")
    @RequestWrapper(localName = "GetServiceCapabilities", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", className = "org.onvif.ver10.events.wsdl.GetServiceCapabilities")
    @ResponseWrapper(localName = "GetServiceCapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", className = "org.onvif.ver10.events.wsdl.GetServiceCapabilitiesResponse")
    public Future<?> getServiceCapabilitiesAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetServiceCapabilitiesResponse> asyncHandler);

    /**
     * Returns the capabilities of the event service. The result is returned in a typed answer.
     * 
     * @return
     *     returns org.onvif.ver10.events.wsdl.Capabilities
     */
    @WebMethod(operationName = "GetServiceCapabilities", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest")
    @WebResult(name = "Capabilities", targetNamespace = "http://www.onvif.org/ver10/events/wsdl")
    @RequestWrapper(localName = "GetServiceCapabilities", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", className = "org.onvif.ver10.events.wsdl.GetServiceCapabilities")
    @ResponseWrapper(localName = "GetServiceCapabilitiesResponse", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", className = "org.onvif.ver10.events.wsdl.GetServiceCapabilitiesResponse")
    public Capabilities getServiceCapabilities();

    /**
     * 
     * @param parameters
     * @return
     *     returns javax.xml.ws.Response<org.onvif.ver10.events.wsdl.CreatePullPointSubscriptionResponse>
     */
    @WebMethod(operationName = "CreatePullPointSubscription", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public Response<CreatePullPointSubscriptionResponse> createPullPointSubscriptionAsync(
        @WebParam(name = "CreatePullPointSubscription", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", partName = "parameters")
        CreatePullPointSubscription parameters);

    /**
     * 
     * @param asyncHandler
     * @param parameters
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "CreatePullPointSubscription", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public Future<?> createPullPointSubscriptionAsync(
        @WebParam(name = "CreatePullPointSubscription", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", partName = "parameters")
        CreatePullPointSubscription parameters,
        @WebParam(name = "CreatePullPointSubscriptionResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<CreatePullPointSubscriptionResponse> asyncHandler);

    /**
     * 
     * @param parameters
     * @return
     *     returns org.onvif.ver10.events.wsdl.CreatePullPointSubscriptionResponse
     * @throws InvalidTopicExpressionFault
     * @throws InvalidFilterFault
     * @throws ResourceUnknownFault
     * @throws SubscribeCreationFailedFault
     * @throws UnacceptableInitialTerminationTimeFault
     * @throws NotifyMessageNotSupportedFault
     * @throws UnrecognizedPolicyRequestFault
     * @throws TopicNotSupportedFault
     * @throws TopicExpressionDialectUnknownFault
     * @throws UnsupportedPolicyRequestFault
     * @throws InvalidProducerPropertiesExpressionFault
     * @throws InvalidMessageContentExpressionFault
     */
    @WebMethod(operationName = "CreatePullPointSubscription", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest")
    @WebResult(name = "CreatePullPointSubscriptionResponse", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public CreatePullPointSubscriptionResponse createPullPointSubscription(
        @WebParam(name = "CreatePullPointSubscription", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", partName = "parameters")
        CreatePullPointSubscription parameters)
        throws InvalidFilterFault, InvalidMessageContentExpressionFault, InvalidProducerPropertiesExpressionFault, InvalidTopicExpressionFault, NotifyMessageNotSupportedFault, ResourceUnknownFault, SubscribeCreationFailedFault, TopicExpressionDialectUnknownFault, TopicNotSupportedFault, UnacceptableInitialTerminationTimeFault, UnrecognizedPolicyRequestFault, UnsupportedPolicyRequestFault
    ;

    /**
     * The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
     * 				This specification does not require the implementation of the WS-ResourceProperty interface.
     * 				Instead, the subsequent direct interface shall be implemented by an ONVIF compliant device
     * 				in order to provide information about the FilterDialects, Schema files and topics supported by
     * 				the device.
     * 
     * @param parameters
     * @return
     *     returns javax.xml.ws.Response<org.onvif.ver10.events.wsdl.GetEventPropertiesResponse>
     */
    @WebMethod(operationName = "GetEventProperties", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public Response<GetEventPropertiesResponse> getEventPropertiesAsync(
        @WebParam(name = "GetEventProperties", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", partName = "parameters")
        GetEventProperties parameters);

    /**
     * The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
     * 				This specification does not require the implementation of the WS-ResourceProperty interface.
     * 				Instead, the subsequent direct interface shall be implemented by an ONVIF compliant device
     * 				in order to provide information about the FilterDialects, Schema files and topics supported by
     * 				the device.
     * 
     * @param asyncHandler
     * @param parameters
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetEventProperties", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public Future<?> getEventPropertiesAsync(
        @WebParam(name = "GetEventProperties", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", partName = "parameters")
        GetEventProperties parameters,
        @WebParam(name = "GetEventPropertiesResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetEventPropertiesResponse> asyncHandler);

    /**
     * The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
     * 				This specification does not require the implementation of the WS-ResourceProperty interface.
     * 				Instead, the subsequent direct interface shall be implemented by an ONVIF compliant device
     * 				in order to provide information about the FilterDialects, Schema files and topics supported by
     * 				the device.
     * 
     * @param parameters
     * @return
     *     returns org.onvif.ver10.events.wsdl.GetEventPropertiesResponse
     */
    @WebMethod(operationName = "GetEventProperties", action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest")
    @WebResult(name = "GetEventPropertiesResponse", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public GetEventPropertiesResponse getEventProperties(
        @WebParam(name = "GetEventProperties", targetNamespace = "http://www.onvif.org/ver10/events/wsdl", partName = "parameters")
        GetEventProperties parameters);

}
